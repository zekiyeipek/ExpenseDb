// <auto-generated />
using System;
using ExpenseDb.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExpenseDb.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250503205230_AddDocumentFileNameToExpense")]
    partial class AddDocumentFileNameToExpense
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentFileName")
                        .HasColumnType("text");

                    b.Property<int>("ExpenseCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ExpenseDb.API.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ulaşım"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Yemek"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Konaklama"
                        });
                });

            modelBuilder.Entity("ExpenseDb.API.Models.PaymentSimulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("integer");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PaymentSimulations");
                });

            modelBuilder.Entity("ExpenseDb.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            FullName = "Admin Kullanıcı",
                            Iban = "TR000000000000000000000000",
                            PasswordHash = new byte[] { 158, 100, 167, 127, 217, 59, 122, 244, 198, 214, 20, 163, 201, 27, 76, 221, 47, 46, 151, 249, 215, 42, 199, 106, 179, 49, 45, 65, 67, 151, 229, 58 },
                            PasswordSalt = new byte[] { 108, 97, 97, 234, 133, 34, 247, 223, 248, 62, 22, 69, 17, 159, 160, 97, 121, 94, 247, 61, 165, 241, 209, 4, 196, 1, 178, 198, 109, 223, 111, 135, 55, 116, 164, 69, 136, 65, 189, 251, 174, 7, 70, 44, 104, 195, 176, 1, 150, 62, 92, 201, 187, 115, 230, 10, 3, 97, 136, 249, 172, 188, 233, 71 },
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "personel@example.com",
                            FullName = "Personel Kullanıcı",
                            Iban = "TR111111111111111111111111",
                            PasswordHash = new byte[] { 100, 251, 140, 115, 89, 106, 233, 23, 164, 120, 188, 23, 195, 112, 244, 168, 170, 64, 11, 164, 23, 216, 74, 248, 192, 80, 5, 128, 52, 204, 16, 119 },
                            PasswordSalt = new byte[] { 219, 31, 100, 42, 126, 74, 175, 137, 132, 214, 229, 156, 42, 134, 103, 38, 1, 75, 80, 180, 158, 10, 58, 155, 171, 236, 253, 70, 184, 249, 94, 243, 206, 86, 18, 124, 68, 202, 119, 15, 147, 168, 200, 95, 37, 217, 4, 135, 250, 0, 92, 163, 141, 239, 220, 191, 223, 142, 187, 0, 27, 49, 94, 176 },
                            Role = 2
                        });
                });

            modelBuilder.Entity("Expense", b =>
                {
                    b.HasOne("ExpenseDb.API.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseDb.API.Models.User", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseDb.API.Models.ExpenseCategory", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ExpenseDb.API.Models.User", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
